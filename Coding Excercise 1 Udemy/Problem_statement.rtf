{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 HelveticaNeue-Italic;
\f3\fnil\fcharset0 HelveticaNeue-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red21\green22\blue24;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c10980\c11373\c12157;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs45\fsmilli22800 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Arrays with Object References\

\f1\b0\fs32 \cf2 \cb3 \strokec2 This is a simple exercise to put some of the stuff we learned into practice. For this exercise, a class called\'a0
\f0\b Instructor
\f1\b0 \'a0is provided. It has some code and you will fill the rest. The class includes 5 variables:\'a0
\f2\i \cf2 \cb3 \strokec2 id
\f1\i0 \cf2 \cb3 \strokec2 ,\'a0
\f2\i \cf2 \cb3 \strokec2 name
\f1\i0 \cf2 \cb3 \strokec2 ,\'a0
\f2\i \cf2 \cb3 \strokec2 title
\f1\i0 \cf2 \cb3 \strokec2 ,\'a0
\f2\i \cf2 \cb3 \strokec2 department
\f1\i0 \cf2 \cb3 \strokec2 , and\'a0
\f2\i \cf2 \cb3 \strokec2 books
\f1\i0 \cf2 \cb3 \strokec2 . The class also includes 4 overloaded constructors. If we invoke the first constructor with the 5 arguments, then it would initialize all the 5 variables. However, it should do it by invoking the overloaded constructors. books variable is an array of type\'a0
\f0\b Book
\f1\b0 . So, Book is a class and it is also provided. Book class has only a single variable called title (of String type) and a couple of methods and a constructor. So, it basically represents a Book. Note that\'a0title field in Instructor class corresponds to title of the instructor like "Assistant Professor" while title in Book class corresponds to the title of the Book (like "Java for Beginners"). Book class has most of the code and there is only one little piece of missing code that you need to add,\'a0
\f3\i\b \cf2 \cb3 \strokec2 which is also optional
\f1\i0\b0 \cf2 \cb3 \strokec2 \'a0as it is not strictly needed to complete the exercise, i.e., you can code it in such a way that we don't have to add anything in Book class. You should be able to figure that out when implementing one of the methods in Instructor class.\cb1 \
\cb3 So, Instructor class will first be initialized with some instructor details. Below, is the sample code for creating Instructor object, which is also included in the main() method in Instructor class. Think of the Book array as the Books written by this Instructor\cb1 \
\cb3 Book book1 = new Book("Java for Beginners");\cb1 \uc0\u8232 \cb3 Book book2 = new Book("Scala for Beginners");\cb1 \uc0\u8232 \cb3 Book book3 = new Book("Effective Python");\cb1 \
\cb3 Instructor instructor = new Instructor(101, "John", "Assistant Professor", "Computer Science", new Book[]\{book1, book2, book3\});\cb1 \
\cb3 Now, here are few methods that you will implement. Method signatures are also provided.\cb1 \
\cb3 public String\'a0
\f0\b getMostRecentBookTitle
\f1\b0 () ~\'a0this method should return the book title of the last element in the Books array. Note that Books array can have any number of elements. So, don't be under the impression that it has only 3 elements based on above data. Above data is simply sample data to explain the problem.\cb1 \
\cb3 public Book\'a0
\f0\b updateBook
\f1\b0 (int index, String title) ~ this method updates the Book instance at the specified index in the Books array with the specified book title. The method should also return a Book object, which would have the\'a0old book title that got updated. For instance, assuming the book array has above books, if we execute instructor.updateBook(1, "Effective C#"), then the title of the Book object at index 1 will be updated to "Effective C#", but the Book object returned by the method will have the title "Scala for Beginners", which is the old title. JUnit tests have been uploaded to automatically evaluate your code. So, if this method does not return Book object with old title ("Scala for Beginners" in the example I just mentioned) as the title, then your code is considered incorrect and would fail on running Junit tests.\'a0\cb1 \

\f0\b \cb3 Hint
\f1\b0 : If the code you are writing is not working as expected, then see if it is because multiple object references are referencing the same object. Also, this\'a0method is what makes you write the missing piece of code in Book class. But, as mentioned above, that extra code is also avoidable.\cb1 \
\cb3 \'a0 \'a0 public Book\'a0
\f0\b updateBook
\f1\b0 (int index, Book book) ~ this is an overloaded method. It simply replaces the Book object at specified index in the array with the specified Book object (book object in the method parameter). This method\'a0returns the old Book object in the array.\cb1 \
\cb3 So, that's about it. If you have viewed all the lectures, then it should definitely help you solve this exercise. Lectures on Arrays, Constructors (including Demo) and the previous lecture on Reinitializing Object References are particularly relevant to this exercise. Feel free to let me know if you have any questions. Have fun!!\cb1 \

\f0\b \cb3 Note: In the next lecture, we do review the solution for this exercise. However, I strongly suggest to spend time in solving the exercise as it is designed to validate what you have learned. If your solution is not passing the automated tests in the platform and have tried hard enough, then the review of the solution in the next lecture should be helpful.
\f1\b0 \cb1 \
}